---
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish CSSFinder distributions 📦 to PyPI and Test PyPI

on:
  push:
    tags:
      - "v*"
    branches:
      - dev

jobs:
  deploy-to-pypi:
    if: github.repository_owner == 'Argmaster'
    name: Build and publish CSSfinder distributions 📦 to PyPI and Test PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Set up Python 3.10

        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install Poetry 📜
        run: pip install poetry

      - name: Install dependencies 🗄️
        run: poetry install --sync

      - name: Bump Version for development 🔨 release
        # Executed only for dev branch push
        if: endsWith(github.ref, 'dev') == true
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version-dev.$(date +%s)

      - name: Detect Version of project
        id: project-version
        run: |
          echo "version=$(poetry version | awk '{ print $2 }')" >> $GITHUB_OUTPUT

      - name: Create development 🔨 Tag 🏷️
        # Executed only for dev branch push
        if: endsWith(github.ref, 'dev') == true
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.project-version.outputs.version }}
          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Build distribution 📦
        run: poetry run poe build

      - name: Publish distribution 📦 to PyPI
        # Executed only for version tag push event
        if: endsWith(github.ref, 'dev') == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish the release notes 📝
        # Executed only for version tag push event
        if: endsWith(github.ref, 'dev') == false
        uses: release-drafter/release-drafter@v5
        with:
          publish: ${{ steps.project-version.outputs.version != '' }}
          tag: ${{ steps.tag-version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Publish distribution 📦 to Test PyPI
        # Executed always
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
