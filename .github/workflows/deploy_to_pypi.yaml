---
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish CSSFinder distributions ðŸ“¦ to PyPI and Test PyPI

on:
  push:
    tags:
      - "v*"
    branches:
      - dev

jobs:
  deploy-to-pypi:
    if: github.repository_owner == 'Argmaster'
    name: Build and publish CSSfinder distributions ðŸ“¦ to PyPI and Test PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.10"
          architecture: "x64"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --sync

      - name: Bump version for developmental release
        if: ( !startsWith(github.ref, 'refs/tags') )
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version-dev.$(date +%s)

      - name: Detect and tag new version
        id: check-version
        uses: salsify/action-detect-and-tag-new-version@v2
        with:
          version-command: |
            bash -o pipefail -c "poetry version | awk '{ print \$2 }'"

      - name: Build distribution ðŸ“¦
        run: poetry run poe build

      - name: Publish distribution ðŸ“¦ to PyPI
        # but only if the current commit is tagged.
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish the release notes
        if: startsWith(github.ref, 'refs/tags')
        uses: release-drafter/release-drafter@v5
        with:
          publish: ${{ steps.check-version.outputs.tag != '' }}
          tag: ${{ steps.check-version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
